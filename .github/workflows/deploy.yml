name: Deploy to EC2

on:
  push:
    branches:
      - main  # Trigger the workflow when code is pushed to the 'main' branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout Code
        uses: actions/checkout@v3

    #   - name: Set up .env file
    #     run: |
    #       echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
    #       echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> .env
    #       echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> .env
    #       echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
    #       echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
    #       echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
    #       echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}" >> .env
    #       echo "SQS_QUEUE_URL=${{ secrets.SQS_QUEUE_URL }}" >> .env
    #       echo "SNS_TOPIC_ARN=${{ secrets.SNS_TOPIC_ARN }}" >> .env
    #       echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build the Docker image
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/tutorials-app:latest .

      # Step 4: Push the Docker image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/tutorials-app:latest

      - name: Decode EC2_PRIVATE_KEY
        run: echo "${{ secrets.EC2_PRIVATE_KEY }}" | base64 --decode > private_key.pem
        
      - name: Set Permissions on the Key
        run: chmod 400 private_key.pem
      
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          key_path: private_key.pem  # Use the decoded private key file
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/tutorials-app:latest
            sudo docker stop tutorials-app || true
            sudo docker rm tutorials-app || true
            sudo docker run -d -p 8000:8000 --name tutorials-app ${{ secrets.DOCKER_USERNAME }}/tutorials-app:latest
      
